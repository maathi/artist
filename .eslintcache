[{"/home/mathi/kumo/artist/src/components/art/card.jsx":"1","/home/mathi/kumo/artist/src/components/art/art.tsx":"2","/home/mathi/kumo/artist/src/components/art/new.jsx":"3","/home/mathi/kumo/artist/src/schema.ts":"4","/home/mathi/kumo/artist/src/components/art/canvas.jsx":"5","/home/mathi/kumo/artist/src/components/nav.jsx":"6","/home/mathi/kumo/artist/src/components/user/login.jsx":"7","/home/mathi/kumo/artist/src/components/user/register.jsx":"8","/home/mathi/kumo/artist/src/components/user/user.jsx":"9","/home/mathi/kumo/artist/src/index.jsx":"10","/home/mathi/kumo/artist/src/userContext.js":"11","/home/mathi/kumo/artist/src/App.jsx":"12","/home/mathi/kumo/artist/src/components/art/arts.jsx":"13","/home/mathi/kumo/artist/src/privateRoute.jsx":"14","/home/mathi/kumo/artist/src/signRoute.jsx":"15","/home/mathi/kumo/artist/src/firebase.js":"16"},{"size":981,"mtime":1612612888933,"results":"17","hashOfConfig":"18"},{"size":1417,"mtime":1612631899216,"results":"19","hashOfConfig":"18"},{"size":3376,"mtime":1612631869232,"results":"20","hashOfConfig":"18"},{"size":246,"mtime":1612613264077,"results":"21","hashOfConfig":"18"},{"size":1945,"mtime":1612613264077,"results":"22","hashOfConfig":"18"},{"size":1938,"mtime":1612638647860,"results":"23","hashOfConfig":"18"},{"size":2455,"mtime":1612631860379,"results":"24","hashOfConfig":"18"},{"size":3105,"mtime":1612631838675,"results":"25","hashOfConfig":"18"},{"size":5410,"mtime":1612612888933,"results":"26","hashOfConfig":"18"},{"size":957,"mtime":1612612888936,"results":"27","hashOfConfig":"18"},{"size":66,"mtime":1612612888940,"results":"28","hashOfConfig":"18"},{"size":1731,"mtime":1612631776289,"results":"29","hashOfConfig":"18"},{"size":790,"mtime":1612612888930,"results":"30","hashOfConfig":"18"},{"size":383,"mtime":1612612888936,"results":"31","hashOfConfig":"18"},{"size":373,"mtime":1612638312865,"results":"32","hashOfConfig":"18"},{"size":235,"mtime":1612612888933,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1hpd5jw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/mathi/kumo/artist/src/components/art/card.jsx",[],["76","77"],"/home/mathi/kumo/artist/src/components/art/art.tsx",["78"],"import { useQuery, gql, useMutation } from \"@apollo/client\"\nimport { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { ArtType } from \"../../schema\"\nimport { Link } from \"react-router-dom\"\n\nconst GET_ART = gql`\n  query Art($id: Int) {\n    art(id: $id) {\n      id\n      name\n      pic\n      description\n      owner {\n        id\n        name\n      }\n    }\n  }\n`\n\nfunction Art() {\n  let [art, setArt] = useState<ArtType>()\n  let { id }: any = useParams()\n\n  const { loading, error, data } = useQuery(GET_ART, {\n    variables: { id: Number(id) },\n  })\n\n  useEffect(() => {\n    if (!data?.art) return\n\n    setArt(data.art)\n  }, [data])\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  return (\n    <div>\n      <p>{art?.name}</p>\n\n      <img\n        src={`${process.env.REACT_APP_FBS}/paintings%2F${art?.pic}.png?alt=media`}\n        style={{\n          backgroundColor: \"rgb(209, 209, 209)\",\n          border: \"3px solid black\",\n        }}\n        alt=\"\"\n      />\n\n      <p style={{ fontSize: \"18px\" }}>\n        <span>Created by : </span>\n        <Link to={`/@${art?.owner.name}`} style={{ color: \"white\" }}>\n          {art?.owner.name}\n        </Link>\n      </p>\n      <p style={{ fontSize: \"18px\" }}>\n        <span>Description :</span>\n        <span style={{ color: \"white\" }}> {art?.description}</span>\n      </p>\n    </div>\n  )\n}\n\nexport default Art\n",["79","80"],"/home/mathi/kumo/artist/src/components/art/new.jsx",["81"],"import { useMutation, gql } from \"@apollo/client\"\nimport { useState, useEffect } from \"react\"\nimport { HexColorPicker } from \"react-colorful\"\nimport \"react-colorful/dist/index.css\"\nimport { useFormik } from \"formik\"\nimport * as Yup from \"yup\"\nimport Canvas from \"./canvas\"\nimport \"../../styles/new.css\"\nimport storage from \"../../firebase\"\nimport shortid from \"shortid\"\n\nconst ADD_ART = gql`\n  mutation AddArt($name: String, $pic: String, $description: String) {\n    addArt(name: $name, pic: $pic, description: $description) {\n      id\n      name\n    }\n  }\n`\n\nfunction New() {\n  let [color, setColor] = useState(\"#000\")\n  let [lineWidth, setLineWidth] = useState(3)\n\n  const [addArt, { data }] = useMutation(ADD_ART)\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      file: null,\n      description: \"\",\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .max(20, \"Title must be 20 characters or less\")\n        .min(4, \"Title must be at least 4 characters long\")\n        .required(\"A title is required\"),\n      file: Yup.mixed().test(\n        \"required\",\n        \"you have to draw something\",\n        (value) => value\n      ),\n      description: Yup.string().max(244, \"Must be 244 characters or less\"),\n    }),\n    onSubmit: async (values) => {\n      let storageRef = storage.ref()\n      let fileName = shortid.generate()\n      let imageRef = storageRef.child(`paintings/${fileName}.png`)\n      let snapshot = await imageRef.put(values.file)\n      if (!snapshot) return\n\n      addArt({\n        variables: {\n          name: values.name,\n          pic: fileName,\n          description: values.description,\n        },\n      })\n    },\n  })\n\n  useEffect(() => {\n    if (!data) return\n    if (!data.addArt) return\n\n    window.location.href = \"/\"\n  }, [data])\n\n  function stepOne() {\n    return\n  }\n\n  return (\n    <section id=\"new\">\n      <h2>add a new painting!</h2>\n      <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n        <input\n          name=\"name\"\n          placeholder=\"title\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        <div className=\"error\">\n          {formik.touched.name && formik.errors.name\n            ? formik.errors.name\n            : null}\n        </div>\n        <textarea\n          name=\"description\"\n          placeholder=\"description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        <div className=\"error\">\n          {formik.touched.description && formik.errors.description\n            ? formik.errors.description\n            : null}\n        </div>\n        <Canvas\n          color={color}\n          lineWidth={lineWidth}\n          setFile={(file) => formik.setFieldValue(\"file\", file)}\n        ></Canvas>\n        <div className=\"error\">\n          {formik.errors.file ? formik.errors.file : null}\n        </div>\n        line width : {lineWidth}\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"60\"\n          value={lineWidth}\n          onChange={(e) => setLineWidth(e.target.value)}\n        ></input>\n        <div id=\"color-picker\">\n          <HexColorPicker onChange={setColor} />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </section>\n  )\n}\n\nexport default New\n","/home/mathi/kumo/artist/src/schema.ts",[],"/home/mathi/kumo/artist/src/components/art/canvas.jsx",["82","83"],"import { useState, useEffect } from \"react\"\n\nexport default function Canvas(props) {\n  let [p, setP] = useState()\n  let [ctx, setCtx] = useState()\n  let [canvas, setCanvas] = useState()\n  let [mouse, setMouse] = useState(\"up\")\n\n  useEffect(() => {\n    let canvas = document.getElementById(\"canvas\")\n    setCanvas(canvas)\n    let ctx = canvas.getContext(\"2d\")\n    setCtx(ctx)\n  }, [])\n\n  useEffect(() => {\n    if (!ctx) return\n\n    if (mouse == \"up\") {\n      ctx.beginPath()\n      return\n    }\n\n    ctx.lineWidth = props.lineWidth\n    ctx.lineCap = \"round\"\n    ctx.lineTo(p?.x, p?.y)\n    ctx.strokeStyle = props.color\n    ctx.stroke()\n  }, [p])\n\n  function handleMouseMove(e) {\n    var rect = canvas.getBoundingClientRect()\n    setP({\n      x: ((e.clientX - rect.left) / (rect.right - rect.left)) * canvas.width,\n      y: ((e.clientY - rect.top) / (rect.bottom - rect.top)) * canvas.height,\n    })\n  }\n\n  function dataURItoBlob(dataURI) {\n    var byteString = atob(dataURI.split(\",\")[1])\n    var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0]\n    var ab = new ArrayBuffer(byteString.length)\n    var ia = new Uint8Array(ab)\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i)\n    }\n    var blob = new Blob([ab], { type: mimeString })\n    return blob\n  }\n\n  function handleMouseUp() {\n    setMouse(\"up\")\n    let data = canvas.toDataURL()\n    let file = dataURItoBlob(data)\n    props.setFile(file)\n  }\n\n  return (\n    <div>\n      <canvas\n        onMouseMove={(e) => handleMouseMove(e)}\n        onMouseDown={() => setMouse(\"down\")}\n        onMouseUp={() => handleMouseUp()}\n        onMouseLeave={() => setMouse(\"up\")}\n        id=\"canvas\"\n        width=\"600px\"\n        height=\"400px\"\n        style={{\n          border: \"1px solid black\",\n          display: \"block\",\n          margin: \"auto\",\n          backgroundColor: \"#eee\",\n          cursor: \"cell\",\n        }}\n      ></canvas>\n    </div>\n  )\n}\n","/home/mathi/kumo/artist/src/components/nav.jsx",["84","85","86","87","88"],"/home/mathi/kumo/artist/src/components/user/login.jsx",["89","90","91"],"import { useLazyQuery, gql } from \"@apollo/client\"\nimport { useEffect, useState } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { useFormik } from \"formik\"\n// import logo from \"./../../img/artist.png\"\nimport \"../../styles/sign.css\"\nimport logo from \"./../../img/logo.png\"\nconst LOG_IN = gql`\n  query Login($name: String, $password: String) {\n    login(name: $name, password: $password)\n  }\n`\n\nfunction Login() {\n  let history = useHistory()\n  let [loginError, setLoginError] = useState(\"\")\n  const [login, { loading, data, error }] = useLazyQuery(LOG_IN)\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      login({\n        variables: { name: values.name, password: values.password },\n      })\n    },\n  })\n\n  useEffect(() => {\n    if (!data) return\n    if (!data.login) {\n      setLoginError(\"your username and password don't match\")\n      return\n    }\n\n    localStorage.setItem(\"token\", data.login)\n    window.location.href = \"/\"\n    // history.push(\"/artist\")\n  }, [data])\n\n  if (loading) return <p>loading...</p>\n  if (error) return <p>`Error! ${error}`</p>\n\n  return (\n    <section id=\"login\">\n      {/* <div id=\"logo-wrapper\">\n        <img src={logo} alt=\"\" />\n      </div> */}\n\n      <h1>Login</h1>\n      <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"username\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.name}\n        />\n        <div className=\"error\">\n          {formik.touched.name && formik.errors.name\n            ? formik.errors.name\n            : null}\n        </div>\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"password\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n\n        <div className=\"error\">\n          {formik.touched.password && formik.errors.password\n            ? formik.errors.password\n            : null}\n        </div>\n\n        <button type=\"submit\">Login</button>\n        <div className=\"error\">{loginError ? loginError : null}</div>\n      </form>\n      <span id=\"not-a-user\">\n        not a user? <Link to=\"/register\">register</Link>\n      </span>\n    </section>\n  )\n}\n\nexport default Login\n","/home/mathi/kumo/artist/src/components/user/register.jsx",["92","93","94","95","96","97"],"import { useMutation, gql, useLazyQuery } from \"@apollo/client\"\nimport { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport logo from \"../../img/artist.png\"\nimport { useFormik } from \"formik\"\nimport * as Yup from \"yup\"\nimport jwt from \"jsonwebtoken\"\nimport \"../../styles/sign.css\"\n\nconst ADD_USER = gql`\n  mutation AddUser($name: String, $password: String) {\n    addUser(name: $name, password: $password)\n  }\n`\n\nconst CHECK_NAME = gql`\n  query CheckName($name: String) {\n    checkName(name: $name) {\n      name\n    }\n  }\n`\n\nfunction Register() {\n  const [addUser, { data }] = useMutation(ADD_USER)\n  const [checkName, { loading, data: checkNameData, error }] = useLazyQuery(\n    CHECK_NAME\n  )\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .max(15, \"username must be 15 characters or less\")\n        .min(3, \"username must be at least 3 characters long\")\n        .matches(\n          /^[a-z0-9_]+$/i,\n          \"Username can only contain alphanumeric characters and underscores\"\n        )\n        .matches(\n          /^[a-z].*/,\n          \"Username has to start with an alphabetic character\"\n        )\n        .required(\"A username is required\")\n        .test(\"check username\", \"username already exists!\", async (value) => {\n          let fo = await checkName({ variables: { name: value } })\n          return !checkNameData?.checkName\n        }),\n      password: Yup.string()\n        .max(30, \"Password must be 30 characters or less\")\n        .min(4, \"Password must be at least 4 characters long\")\n        .required(\"A password is Required\"),\n    }),\n    onSubmit: (values) => {\n      addUser({\n        variables: { name: values.name, password: values.password },\n      })\n    },\n  })\n\n  useEffect(() => {\n    if (!data) return\n    if (!data.addUser) return\n\n    localStorage.setItem(\"token\", data.addUser)\n    window.location.href = \"/\"\n  }, [data])\n\n  return (\n    <section id=\"register\">\n      <h1>Register</h1>\n      <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"pick a username\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        <div className=\"error\">\n          {formik.errors.name ? formik.errors.name : null}\n        </div>\n        <input\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"text\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        <div className=\"error\">\n          {formik.touched.password && formik.errors.password\n            ? formik.errors.password\n            : null}\n        </div>\n        <button type=\"submit\">Register</button>\n        <div className=\"error\"></div>\n      </form>\n      <span>\n        already have an account? <Link to=\"/login\">login</Link>\n      </span>\n    </section>\n  )\n}\nexport default Register\n","/home/mathi/kumo/artist/src/components/user/user.jsx",["98","99","100","101","102","103"],"import { useQuery, useMutation, gql } from \"@apollo/client\"\nimport { useEffect, useState, useContext } from \"react\"\nimport { useParams, Link } from \"react-router-dom\"\nimport { FaTimesCircle, FaSave } from \"react-icons/fa\"\nimport UserContext from \"../../userContext\"\nimport jwt from \"jsonwebtoken\"\nimport \"../../styles/user.css\"\nimport storage from \"../../firebase\"\nimport shortid from \"shortid\"\n\nconst GET_USER = gql`\n  query UserByName($name: String) {\n    userByName(name: $name) {\n      id\n      name\n      password\n      photo\n      intro\n      arts {\n        id\n        name\n        pic\n        owner {\n          name\n        }\n      }\n    }\n  }\n`\nconst DELETE_ART = gql`\n  mutation DeleteArt($id: Int) {\n    deleteArt(id: $id) {\n      id\n      name\n    }\n  }\n`\nconst UPDATE_PHOTO = gql`\n  mutation UpdatePhoto($photo: String) {\n    updatePhoto(photo: $photo)\n  }\n`\n\nconst UPDATE_INTRO = gql`\n  mutation UpdateIntro($intro: String) {\n    updateIntro(intro: $intro) {\n      intro\n    }\n  }\n`\nfunction User() {\n  let [user, setUser] = useState()\n  let [intro, setIntro] = useState(\"\")\n  let [isProfile, setIsProfile] = useState(false)\n  let { name } = useParams()\n  const userContext = useContext(UserContext)\n\n  const { loading, error, data } = useQuery(GET_USER, {\n    variables: { name },\n  })\n\n  const [updatePhoto, { data: updatePhotoData }] = useMutation(UPDATE_PHOTO)\n  const [updateIntro, { data: introData }] = useMutation(UPDATE_INTRO)\n  const [deleteArt, { data: deletedArtdata }] = useMutation(DELETE_ART)\n\n  useEffect(() => {\n    if (!data) return\n    if (!data.userByName) return\n\n    setUser(data.userByName)\n    setIntro(data.userByName.intro || \"\")\n\n    if (data.userByName.id == userContext.id) setIsProfile(true)\n  }, [data])\n\n  useEffect(() => {\n    if (!updatePhotoData) return\n    if (!updatePhotoData.updatePhoto) return\n\n    async function decode() {\n      let user = await jwt.decode(updatePhotoData.updatePhoto)\n      userContext.setPhoto(user.photo)\n    }\n    decode()\n    localStorage.setItem(\"token\", updatePhotoData.updatePhoto)\n  }, [updatePhotoData])\n\n  useEffect(() => {\n    if (!deletedArtdata) return\n    if (!deletedArtdata.deleteArt) return\n\n    let arts = user.arts.filter((a) => a.id != deletedArtdata.deleteArt.id)\n    let u = JSON.parse(JSON.stringify(user))\n    u.arts = arts\n    setUser(u)\n  }, [deletedArtdata])\n\n  async function handleUpload({\n    target: {\n      validity,\n      files: [photo],\n    },\n  }) {\n    if (!validity.valid) return\n    let storageRef = storage.ref()\n    let fileName = shortid.generate()\n    let imageRef = storageRef.child(`avatars/${fileName}`)\n    let snapshot = await imageRef.put(photo)\n    if (!snapshot) return\n    updatePhoto({ variables: { photo: fileName } })\n  }\n\n  function handleClick() {\n    document.getElementById(\"upload\").click()\n  }\n\n  function handleDelete(id) {\n    deleteArt({ variables: { id: Number(id) } })\n  }\n\n  function profileInfo() {\n    return (\n      <div id=\"infos\">\n        <div className=\"photo-wrapper\">\n          <img\n            src={`${process.env.REACT_APP_FBS}/avatars%2F${userContext.photo}?alt=media`}\n            alt=\"\"\n            onClick={handleClick}\n          />\n        </div>\n        <input\n          style={{ display: \"none\" }}\n          id=\"upload\"\n          type=\"file\"\n          onChange={handleUpload}\n        />\n        <textarea\n          value={intro}\n          onChange={(e) => setIntro(e.target.value)}\n          name=\"\"\n          id=\"\"\n          placeholder=\"what's up?\"\n        ></textarea>\n        {/* <span contentEditable=\"true\" onChange={(e) => console.log(\"sss\")}>\n          {intro}\n        </span> */}\n        {intro ? (\n          <div>\n            <button onClick={() => updateIntro({ variables: { intro } })}>\n              <FaSave id=\"save\" />\n              save\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    )\n  }\n\n  function notProfileInfo() {\n    return (\n      <div id=\"infos\">\n        <div className=\"photo-wrapper\">\n          <img\n            src={`${process.env.REACT_APP_FBS}/avatars%2F${user?.photo}?alt=media`}\n            alt=\"\"\n          />\n        </div>\n        <p>{intro}</p>\n      </div>\n    )\n  }\n\n  function card(a) {\n    return (\n      <div key={a.id} className=\"card\">\n        <span id=\"name\">{a.name}</span>\n\n        <div className=\"wrapper\">\n          <Link to={`/${a.id}`}>\n            <img\n              src={`${process.env.REACT_APP_FBS}/paintings%2F${a.pic}.png?alt=media`}\n              alt=\"\"\n            />\n          </Link>\n        </div>\n        {isProfile ? (\n          <div id=\"bottom\">\n            <FaTimesCircle\n              id=\"delete\"\n              onClick={() => {\n                handleDelete(a.id)\n              }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    )\n  }\n\n  if (loading) return <h1>loading...</h1>\n  if (error) return <h1>error!</h1>\n\n  return (\n    <div id=\"user\">\n      {isProfile ? profileInfo() : notProfileInfo()}\n      <div>\n        {user?.arts[0] ? (\n          <div>\n            <h4>\n              <span>{user?.name}</span>'s paintings :\n            </h4>\n            <div className=\"arts\">{user?.arts.map((a) => card(a))}</div>\n          </div>\n        ) : (\n          <h4>\n            <span>{user?.name}</span> has no paintings yet :/\n          </h4>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default User\n","/home/mathi/kumo/artist/src/index.jsx",[],"/home/mathi/kumo/artist/src/userContext.js",[],"/home/mathi/kumo/artist/src/App.jsx",["104","105"],"import React, { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\"\nimport Arts from \"./components/art/arts\"\nimport Art from \"./components/art/art\"\nimport New from \"./components/art/new\"\nimport User from \"./components/user/user\"\nimport Register from \"./components/user/register\"\nimport Login from \"./components/user/login\"\nimport Nav from \"./components/nav.jsx\"\nimport UserContext from \"./userContext\"\nimport jwt from \"jsonwebtoken\"\nimport PrivateRoute from \"./privateRoute\"\nimport SignRoute from \"./signRoute\"\n\nfunction App() {\n  let [id, setId] = useState(null)\n  let [name, setName] = useState(\"\")\n  let [photo, setPhoto] = useState(\"\")\n  let token = localStorage.getItem(\"token\")\n  useEffect(() => {\n    async function decode() {\n      let user = await jwt.decode(token)\n      if (!user) return\n      setId(user.id)\n      setName(user.name)\n      setPhoto(user.photo)\n    }\n    decode()\n  }, [])\n\n  return (\n    <Router>\n      <UserContext.Provider\n        value={{ id, setId, name, setName, photo, setPhoto, token }}\n      >\n        <div className=\"App\">\n          <Nav></Nav>\n          <Switch>\n            <Route path=\"/@:name\" component={User}></Route>\n            <PrivateRoute path=\"/new\" component={New}></PrivateRoute>\n\n            <SignRoute path=\"/login\" component={Login}></SignRoute>\n            <SignRoute path=\"/register\" component={Register}></SignRoute>\n            <Route path=\"/:id\">\n              <Art></Art>\n            </Route>\n            <Route path=\"/\">\n              <Arts></Arts>\n            </Route>\n          </Switch>\n        </div>\n      </UserContext.Provider>\n    </Router>\n  )\n}\n\nexport default App\n","/home/mathi/kumo/artist/src/components/art/arts.jsx",["106","107","108"],"import { useQuery, gql, useMutation } from \"@apollo/client\"\nimport { useState, useEffect, useContext } from \"react\"\nimport { ArtType } from \"../../schema\"\nimport Card from \"./card\"\nimport \"../../styles/arts.css\"\n\nconst GET_ARTS = gql`\n  query {\n    arts {\n      id\n      rid\n      name\n      pic\n      owner {\n        id\n        name\n        photo\n      }\n    }\n  }\n`\n\nfunction Arts() {\n  let [arts, setArts] = useState()\n  const { loading, error, data } = useQuery(GET_ARTS)\n\n  useEffect(() => {\n    if (!data?.arts) return\n    setArts(data.arts)\n  }, [data])\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  return (\n    <div className=\"arts\">\n      {arts?.map((j) => (\n        <Card key={j.id} j={j}></Card>\n      ))}\n    </div>\n  )\n}\n\nexport default Arts\n","/home/mathi/kumo/artist/src/privateRoute.jsx",[],"/home/mathi/kumo/artist/src/signRoute.jsx",[],"/home/mathi/kumo/artist/src/firebase.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":25,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"117","severity":1,"message":"118","line":69,"column":12,"nodeType":"115","messageId":"116","endLine":69,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":19,"column":15,"nodeType":"121","messageId":"122","endLine":19,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":29,"column":6,"nodeType":"125","endLine":29,"endColumn":9,"suggestions":"126"},{"ruleId":"117","severity":1,"message":"127","line":11,"column":9,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"128","line":12,"column":17,"nodeType":"115","messageId":"116","endLine":12,"endColumn":27},{"ruleId":"117","severity":1,"message":"129","line":25,"column":12,"nodeType":"115","messageId":"116","endLine":25,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":58,"column":11,"nodeType":"132","endLine":58,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":79,"column":9,"nodeType":"132","endLine":79,"endColumn":12},{"ruleId":"117","severity":1,"message":"133","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":12},{"ruleId":"117","severity":1,"message":"127","line":15,"column":7,"nodeType":"115","messageId":"116","endLine":15,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":72,"column":11,"nodeType":"136","endLine":72,"endColumn":22},{"ruleId":"117","severity":1,"message":"137","line":2,"column":21,"nodeType":"115","messageId":"116","endLine":2,"endColumn":29},{"ruleId":"117","severity":1,"message":"133","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"138","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":11},{"ruleId":"117","severity":1,"message":"139","line":26,"column":23,"nodeType":"115","messageId":"116","endLine":26,"endColumn":30},{"ruleId":"117","severity":1,"message":"140","line":26,"column":53,"nodeType":"115","messageId":"116","endLine":26,"endColumn":58},{"ruleId":"117","severity":1,"message":"141","line":49,"column":15,"nodeType":"115","messageId":"116","endLine":49,"endColumn":17},{"ruleId":"117","severity":1,"message":"142","line":63,"column":31,"nodeType":"115","messageId":"116","endLine":63,"endColumn":40},{"ruleId":"119","severity":1,"message":"120","line":73,"column":28,"nodeType":"121","messageId":"122","endLine":73,"endColumn":30},{"ruleId":"123","severity":1,"message":"143","line":74,"column":6,"nodeType":"125","endLine":74,"endColumn":12,"suggestions":"144"},{"ruleId":"123","severity":1,"message":"145","line":86,"column":6,"nodeType":"125","endLine":86,"endColumn":23,"suggestions":"146"},{"ruleId":"119","severity":1,"message":"147","line":92,"column":45,"nodeType":"121","messageId":"122","endLine":92,"endColumn":47},{"ruleId":"123","severity":1,"message":"148","line":96,"column":6,"nodeType":"125","endLine":96,"endColumn":22,"suggestions":"149"},{"ruleId":"117","severity":1,"message":"150","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":11},{"ruleId":"123","severity":1,"message":"151","line":35,"column":6,"nodeType":"125","endLine":35,"endColumn":8,"suggestions":"152"},{"ruleId":"117","severity":1,"message":"114","line":1,"column":25,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"153","line":2,"column":31,"nodeType":"115","messageId":"116","endLine":2,"endColumn":41},{"ruleId":"117","severity":1,"message":"154","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":17},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"@typescript-eslint/no-unused-vars","'useMutation' is defined but never used.","Identifier","unusedVar","no-unused-vars","'stepOne' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ctx', 'mouse', 'props.color', and 'props.lineWidth'. Either include them or remove the dependency array.","ArrayExpression",["157"],"'history' is assigned a value but never used.","'setClasses' is assigned a value but never used.","'guestNav' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'logo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'jwt' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'fo' is assigned a value but never used.","'introData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userContext.id'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.",["159"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["160"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["161"],"'useContext' is defined but never used.","'ArtType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [ctx, mouse, p, props.color, props.lineWidth]",{"range":"172","text":"173"},"Update the dependencies array to be: [data, userContext.id]",{"range":"174","text":"175"},"Update the dependencies array to be: [updatePhotoData, userContext]",{"range":"176","text":"177"},"Update the dependencies array to be: [deletedArtdata, user]",{"range":"178","text":"179"},"Update the dependencies array to be: [token]",{"range":"180","text":"181"},[639,642],"[ctx, mouse, p, props.color, props.lineWidth]",[1740,1746],"[data, userContext.id]",[2067,2084],"[updatePhotoData, userContext]",[2341,2357],"[deletedArtdata, user]",[991,993],"[token]"]