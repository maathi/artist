[{"/home/mathi/kumo/artist/src/index.tsx":"1","/home/mathi/kumo/artist/src/App.tsx":"2","/home/mathi/kumo/artist/src/components/nav.tsx":"3","/home/mathi/kumo/artist/src/components/user/user.tsx":"4","/home/mathi/kumo/artist/src/components/user/login.tsx":"5","/home/mathi/kumo/artist/src/components/user/register.tsx":"6","/home/mathi/kumo/artist/src/components/art/card.jsx":"7","/home/mathi/kumo/artist/src/components/art/arts.tsx":"8","/home/mathi/kumo/artist/src/components/art/art.tsx":"9","/home/mathi/kumo/artist/src/components/art/new.jsx":"10","/home/mathi/kumo/artist/src/schema.ts":"11"},{"size":551,"mtime":1609336192938,"results":"12","hashOfConfig":"13"},{"size":1067,"mtime":1609337125949,"results":"14","hashOfConfig":"13"},{"size":659,"mtime":1609337359347,"results":"15","hashOfConfig":"13"},{"size":1500,"mtime":1609359202719,"results":"16","hashOfConfig":"13"},{"size":1486,"mtime":1609336544194,"results":"17","hashOfConfig":"13"},{"size":1469,"mtime":1609337044186,"results":"18","hashOfConfig":"13"},{"size":502,"mtime":1609358605435,"results":"19","hashOfConfig":"13"},{"size":853,"mtime":1609358613175,"results":"20","hashOfConfig":"13"},{"size":1135,"mtime":1609337090981,"results":"21","hashOfConfig":"13"},{"size":4130,"mtime":1609337471433,"results":"22","hashOfConfig":"13"},{"size":222,"mtime":1609336679869,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vssuch",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/mathi/kumo/artist/src/index.tsx",[],["53","54"],"/home/mathi/kumo/artist/src/App.tsx",[],"/home/mathi/kumo/artist/src/components/nav.tsx",[],"/home/mathi/kumo/artist/src/components/user/user.tsx",["55","56"],"import { useQuery, useMutation, gql } from \"@apollo/client\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { UserType } from \"../../schema\"\nimport Card from \"../art/card\"\nimport \"../../styles/arts.css\"\n\nconst GET_USER = gql`\n  query User($id: Int) {\n    user(id: $id) {\n      id\n      name\n      password\n      arts {\n        id\n        name\n        pic\n        owner {\n          name\n        }\n      }\n    }\n  }\n`\nconst DELETE_ART = gql`\n  mutation DeleteArt($id: Int) {\n    deleteArt(id: $id) {\n      id\n      name\n    }\n  }\n`\n\nfunction User() {\n  let [user, setUser] = useState<UserType>()\n  let { id }: any = useParams()\n\n  const { loading, error, data } = useQuery(GET_USER, {\n    variables: { id: Number(id) },\n  })\n\n  useEffect(() => {\n    if (!data) return\n    if (!data.user) return\n\n    setUser(data.user)\n  }, [data])\n\n  //   const [deleteArt, { data: deletedArtdata }] = useMutation(DELETE_ART)\n\n  if (loading) return <h1>loading...</h1>\n  if (error) return <h1>error!</h1>\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  return (\n    <div>\n      {user ? (\n        <div>\n          <h4>\n            <span style={{ color: \"white\" }}>{user.name}</span>'s arts :\n          </h4>\n          <div className=\"arts\">\n            {user.arts.map((j) => (\n              <Card key={j.id} j={j}></Card>\n            ))}\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  )\n}\n\nexport default User\n","/home/mathi/kumo/artist/src/components/user/login.tsx",[],"/home/mathi/kumo/artist/src/components/user/register.tsx",["57"],"import { useMutation, gql } from \"@apollo/client\"\nimport { useEffect, useState } from \"react\"\nimport { UserType } from \"../../schema\"\n\nconst ADD_USER = gql`\n  mutation AddUser($name: String, $password: String) {\n    addUser(name: $name, password: $password) {\n      id\n      name\n      password\n    }\n  }\n`\n\n//they are called trainers :(\nfunction Register() {\n  let [user, setUser] = useState<UserType>()\n  let [name, setName] = useState(\"\")\n  let [password, setPassword] = useState(\"\")\n  const [addUser, { data }] = useMutation(ADD_USER)\n\n  useEffect(() => {\n    if (!data) return\n    if (!data.addUser) return\n\n    setUser(data.addUser)\n    console.log(\"my user: \", user)\n    // localStorage.setItem(\"userId\", data.addUser.id)\n    // localStorage.setItem(\"userName\", user?.name)\n  }, [data])\n\n  useEffect(() => {\n    if (!user) return\n\n    localStorage.setItem(\"id\", user.id.toString())\n    localStorage.setItem(\"name\", user.name.toString())\n  }, [user])\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={() => addUser({ variables: { name, password } })}>\n        Register\n      </button>\n      {user ? <p>{user.name} was added!</p> : \"\"}\n    </div>\n  )\n}\nexport default Register\n","/home/mathi/kumo/artist/src/components/art/card.jsx",[],"/home/mathi/kumo/artist/src/components/art/arts.tsx",["58","59"],"import { useQuery, gql, useMutation } from \"@apollo/client\"\nimport { useState, useEffect } from \"react\"\nimport { ArtType } from \"../../schema\"\nimport Card from \"./card\"\nimport \"../../styles/arts.css\"\nconst GET_ARTS = gql`\n  query {\n    arts {\n      id\n      name\n      pic\n      price\n      owner {\n        id\n        name\n      }\n    }\n  }\n`\n\nfunction Arts() {\n  let [arts, setArts] = useState<ArtType[]>()\n  const { loading, error, data } = useQuery(GET_ARTS)\n\n  useEffect(() => {\n    if (!data) return\n    console.log(data)\n\n    if (!data.arts) return\n    setArts(data.arts)\n    console.log(\"my arts\", arts)\n  }, [data])\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  return (\n    <div className=\"arts\">\n      {arts?.map((j) => (\n        <Card key={j.id} j={j}></Card>\n      ))}\n    </div>\n  )\n}\n\nexport default Arts\n","/home/mathi/kumo/artist/src/components/art/art.tsx",["60","61"],"import { useQuery, gql, useMutation } from \"@apollo/client\"\nimport { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { ArtType } from \"../../schema\"\n\nconst GET_ART = gql`\n  query Art($id: Int) {\n    art(id: $id) {\n      id\n      name\n      pic\n      owner {\n        id\n        name\n      }\n    }\n  }\n`\n\nfunction Art() {\n  let [art, setArt] = useState<ArtType>()\n  let { id }: any = useParams()\n\n  const { loading, error, data } = useQuery(GET_ART, {\n    variables: { id: Number(id) },\n  })\n\n  useEffect(() => {\n    if (!data) return\n    console.log(data)\n\n    if (!data.art) return\n    setArt(data.art)\n    console.log(\"my arts\", art)\n  }, [data])\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  return (\n    <div>\n      <p>{art?.name}</p>\n      <img\n        src={`http://localhost:4000/${art?.pic}.png`}\n        style={{ backgroundColor: \"rgb(209, 209, 209)\" }}\n        alt=\"\"\n      />\n      <p style={{ fontSize: \"16px\" }}>\n        {\"  \"}owned by:\n        <span style={{ color: \"white\" }}> {art?.owner.name}</span>\n      </p>\n    </div>\n  )\n}\nexport default Art\n","/home/mathi/kumo/artist/src/components/art/new.jsx",["62","63","64","65","66","67","68","69","70","71","72","73"],"import { useMutation, gql, useQuery } from \"@apollo/client\"\nimport { mainModule } from \"process\"\nimport { useState, useEffect } from \"react\"\nimport { updateSourceFile } from \"typescript\"\nimport { ArtType } from \"../../schema\"\n\nconst ADD_ART = gql`\n  mutation AddArt($name: String, $owner_id: Int, $file: Upload!, $price: Int) {\n    addArt(name: $name, owner_id: $owner_id, file: $file, price: $price) {\n      id\n      name\n    }\n  }\n`\nconst UPLOAD_FILE = gql`\n  mutation Upload($file: Upload!) {\n    upload(file: $file)\n  }\n`\nconst SINGLE_UPLOAD_MUTATION = gql`\n  mutation singleUpload($file: Upload!) {\n    singleUpload(file: $file) {\n      id\n    }\n  }\n`\n\nfunction New() {\n  let [art, setArt] = useState()\n  let [name, setName] = useState(\"\")\n  let [file, setFile] = useState()\n  let [price, setPrice] = useState(\"\")\n\n  const [addArt, { data }] = useMutation(ADD_ART)\n\n  useEffect(() => {\n    if (!data) return\n    if (!data.addArt) return\n    setArt(data.addArt)\n  }, [data])\n\n  function handleCreate() {}\n\n  return (\n    <div>\n      <h2>create your art!</h2>\n      <input\n        placeholder=\"name\"\n        value={name}\n        onChange={(e) => {\n          {\n            setName(e.target.value)\n          }\n        }}\n      />\n      <input\n        placeholder=\"price\"\n        value={price}\n        onChange={(e) => {\n          {\n            setPrice(e.target.value)\n          }\n        }}\n      />\n      <Canvas setFile={setFile}></Canvas>\n\n      <button\n        onClick={() => {\n          addArt({\n            variables: {\n              name: name,\n              owner_id: Number(localStorage.getItem(\"id\")),\n              file: file,\n              price: Number(price),\n            },\n          })\n        }}\n      >\n        create\n      </button>\n      {art ? <p>{art.name} was added!</p> : \"\"}\n    </div>\n  )\n}\n\nfunction Canvas(props) {\n  let [p, setP] = useState()\n  let [ctx, setCtx] = useState()\n  let [canvas, setCanvas] = useState()\n  let [mouse, setMouse] = useState(\"up\")\n\n  const [upload, { data }] = useMutation(SINGLE_UPLOAD_MUTATION)\n\n  useEffect(() => {\n    let canvas = document.getElementById(\"canvas\")\n    setCanvas(canvas)\n    let ctx = canvas.getContext(\"2d\")\n    setCtx(ctx)\n  }, [])\n\n  useEffect(() => {\n    if (!ctx) return\n\n    if (mouse == \"up\") {\n      ctx.moveTo(p?.x, p?.y)\n      return\n    }\n\n    ctx.lineTo(p?.x, p?.y)\n    ctx.strokeStyle = \"#000\"\n    ctx.stroke()\n  }, [p])\n\n  function handleMouseMove(e) {\n    var rect = canvas.getBoundingClientRect()\n    setP({\n      x: ((e.clientX - rect.left) / (rect.right - rect.left)) * canvas.width,\n      y: ((e.clientY - rect.top) / (rect.bottom - rect.top)) * canvas.height,\n    })\n  }\n\n  function dataURItoBlob(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    var byteString = atob(dataURI.split(\",\")[1])\n\n    // separate out the mime component\n    var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0]\n\n    // write the bytes of the string to an ArrayBuffer\n    var ab = new ArrayBuffer(byteString.length)\n\n    // create a view into the buffer\n    var ia = new Uint8Array(ab)\n\n    // set the bytes of the buffer to the correct values\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i)\n    }\n\n    // write the ArrayBuffer to a blob, and you're done\n    var blob = new Blob([ab], { type: mimeString })\n\n    return blob\n  }\n\n  function handleMouseUp() {\n    setMouse(\"up\")\n    let data = canvas.toDataURL()\n    let file = dataURItoBlob(data)\n    props.setFile(file)\n  }\n\n  return (\n    <div>\n      <canvas\n        onMouseMove={(e) => handleMouseMove(e)}\n        onMouseDown={() => setMouse(\"down\")}\n        onMouseUp={() => handleMouseUp()}\n        onMouseLeave={() => setMouse(\"up\")}\n        id=\"canvas\"\n        width=\"600px\"\n        height=\"400px\"\n        style={{\n          border: \"1px solid black\",\n          display: \"block\",\n          margin: \"auto\",\n          backgroundColor: \"#eee\",\n          cursor: \"cell\",\n        }}\n      ></canvas>\n    </div>\n  )\n}\n\nexport default New\n",["74","75"],"/home/mathi/kumo/artist/src/schema.ts",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":20,"nodeType":"82","messageId":"83","endLine":1,"endColumn":31},{"ruleId":"80","severity":1,"message":"84","line":25,"column":7,"nodeType":"82","messageId":"83","endLine":25,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":30,"column":6,"nodeType":"87","endLine":30,"endColumn":12,"suggestions":"88"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":25,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"89","line":32,"column":6,"nodeType":"87","endLine":32,"endColumn":12,"suggestions":"90"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":25,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"91","line":35,"column":6,"nodeType":"87","endLine":35,"endColumn":12,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"95","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":20},{"ruleId":"93","severity":1,"message":"96","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":26},{"ruleId":"93","severity":1,"message":"97","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":17},{"ruleId":"93","severity":1,"message":"98","line":15,"column":7,"nodeType":"82","messageId":"83","endLine":15,"endColumn":18},{"ruleId":"93","severity":1,"message":"99","line":42,"column":12,"nodeType":"82","messageId":"83","endLine":42,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":51,"column":11,"nodeType":"102","messageId":"103","endLine":53,"endColumn":12},{"ruleId":"100","severity":1,"message":"101","line":60,"column":11,"nodeType":"102","messageId":"103","endLine":62,"endColumn":12},{"ruleId":"93","severity":1,"message":"104","line":92,"column":10,"nodeType":"82","messageId":"83","endLine":92,"endColumn":16},{"ruleId":"93","severity":1,"message":"105","line":92,"column":20,"nodeType":"82","messageId":"83","endLine":92,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":104,"column":15,"nodeType":"108","messageId":"109","endLine":104,"endColumn":17},{"ruleId":"85","severity":1,"message":"110","line":112,"column":6,"nodeType":"87","endLine":112,"endColumn":9,"suggestions":"111"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'useMutation' is defined but never used.","Identifier","unusedVar","'DELETE_ART' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'arts'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'art'. Either include it or remove the dependency array.",["116"],"no-unused-vars","'useQuery' is defined but never used.","'mainModule' is defined but never used.","'updateSourceFile' is defined but never used.","'ArtType' is defined but never used.","'UPLOAD_FILE' is assigned a value but never used.","'handleCreate' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'upload' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'ctx' and 'mouse'. Either include them or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [data, user]",{"range":"126","text":"127"},"Update the dependencies array to be: [arts, data]",{"range":"128","text":"129"},"Update the dependencies array to be: [art, data]",{"range":"130","text":"131"},"Update the dependencies array to be: [ctx, mouse, p]",{"range":"132","text":"133"},[786,792],"[data, user]",[616,622],"[arts, data]",[679,685],"[art, data]",[2405,2408],"[ctx, mouse, p]"]